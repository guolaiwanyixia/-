编译过程：
通过编译器把   .java 文件 编译成 .class文件   再调用虚拟机，编译器，编译字节码文件

注意格式：
文件名，单词第一个字大写 'W'elcome

图形化：
跳过
基本不用这个

Java的基本程序设计结构：
严格区分大小写
Java类名的规则，名字必须以字母开头，后面可以跟字母和数字的任意形式，长度基本没有任何限制
名字必须以大写字母开头，如果有多个名字，每个单词开头都应该大写（'H'ello 'W'orld）

退出码：
java退出码为0
如果希望终止程序就要使用System.exit方法

注释：
有三种方法
1. //
2. /*    */
3./**    */

数据类型：
Java有8种基本类型，4种整形，2种浮点类型，1种字符类型
byte(1字节)  short(2)   int(4)   long(8)  
使用long的后缀要加l
八进制开头要加 0
十六进制加0 x

浮点类型：
float (4)   double (8)
float的精度大概（6~7位）
double是float的2倍
如果输入的小数 1.12  不加f的话就默认位double类型
只能大精度转小精度，比如用double 既能输出整数类型  又能输出浮点类型 但是他输出整数    1 ->1.0  会在后面加0
如果出先2.0-1.1 = 0.899999...情况  可以把结果转成float类型就输出0.9了  好像float是底层有四舍五入机制

字符类型：
ascii            美国信息交换标准代码  可以查看ascii表
char(1)类型表示单个字符
根据ascii 标准，来转换对应的字符
char类型的字符要用' ' 单引号括起来
如果输入的是 数字类型的char ，它就会返回对应的字符， char a = 100;  结果是d
如果我输入的是字符类型的char，它会返回他本身char a = 'd'; 结果还是d
如果想要d对应的数字类型，要进行强转  out:（int)(a) ;  结果是100
建议不要在程序中使用char类型，除非需要处理UTF-16代码单元，最好将字符串作为抽象类型处理

boolean类型：
false 和 true

变量和常量：
变量
每一个变量都有一个类型（type）
可以一行中声明多个变量
int i , j ; 都是int  不提倡，可读性差
int a ;      static int ab；
这里的 a 是输出不了值的，但是ab就可以输出0，静态代码在编译时，赋了默认值
常量 
final int AA = 1；
这里一旦赋值就无法修改,
常量名，全大写
如果想要多个类使用就 public static final int AA = 1；

枚举类型：
（第五章）

运算符：
平方根 用 Math.sqrt ( x )           x的平方根
平方 用   Math.pow ( x ，a)      x的a次方
         Math.PI                           兀 
三元运算   c < d ? c : d           c和d哪个小返回哪个 
  
字符串：

子串 String  s = "hello";
        String sub = s.substring(0, 3); 从下标 0 开始  总长度为3
         out  ："hel"
拼接 s+sub       out： "hellohel";

String.join        用一个界定符 / 隔开拼接的字符串 
      String all = String.join("/", s, sub);
        out："hello/hel"          就用/隔开了
 a.equal  (b）     检查字符串是否相等     a是否等于b
           查看compareTo方法！！！

String API：  
s.charAt(n)               返回位置n的代码
String i = "123";
System.out.println( i.charAt(1));       返回下标为1的数字 

StringBuilder Builder = new StringBuilder();             构建字符
        Builder.append("ch");                                     填加字符
        Builder.append("ane");                              每次添加一部分内容就调用append方法

输入与输出：
   Scanner scanner = new Scanner(System.in);                  新建构造器
        System.out.println("what is your name?");                 
        String name = scanner.next();                                    这个是输入字符（不能含空格）
        String name = scanner.nextLine();                         这个是输入字符（可以含空格）
int next = scanner.nextInt();                                     这个是输入 int 类型数字

System.out.printf("%tc",new Date());                      打印当前时间日期











      









